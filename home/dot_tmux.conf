# Set default shell to fish
set-option -g default-shell /opt/homebrew/bin/fish

# Increase history size
set -g history-limit 10000

# Start with mouse mode enabled
set -g mouse on

# Use 1-based indexing for windows and panes
set -g base-index 1
setw -g pane-base-index 1

# Enable automatic renumbering of windows
set -g renumber-windows on

setw -g xterm-keys on
set -s escape-time 10 # faster command sequences
set -sg repeat-time 600 # increase repeat timeout
set -s focus-events on

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000 # slightly longer status messages display time

# Replace C-b by C-a instead of using both prefixes
set -gu prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# New sessions
bind C-c new-session

# Better split commands
bind | split-window -hc "#{pane_current_path}"
bind - split-window -vc "#{pane_current_path}"

bind-key "\\" split-window -h -c "#{pane_current_path}"
bind-key "|" split-window -fh -c "#{pane_current_path}"

bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Pane movement
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

# Pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Copy mode
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# Window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window
bind -r < swap-window -d -t -1 # move window right
bind -r > swap-window -d -t +1 # move window left

# Toggle layout
bind-key Space next-layout

# Toggle last session
bind-key C-Space switch-client -l

# Rename sessions
bind-key n command-prompt 'rename-window %%'
bind-key N command-prompt 'rename-session %%'

# Toggle synchronize panes
bind-key S set -g synchronize-panes

# Move status line to top
set -g status-position top

# for neovim
set -g @resurrect-strategy-nvim 'session'

# tmux-logging path
set -g @logging-path "~/logs/tmux"

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm*:Tc"

# set tmux-fzf vars
TMUX_FZF_OPTIONS="-p -w 65% -h 50% -m"
TMUX_FZF_LAUNCH_KEY="C-f"

# TokyoNight

set -g mode-style "fg=#82aaff,bg=#3b4261"

set -g message-style "fg=#82aaff,bg=#3b4261"
set -g message-command-style "fg=#82aaff,bg=#3b4261"

set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "#{?pane_synchronized,fg=red,fg=#82aaff}"

set -g status "on"
set -g status-justify "absolute-centre"

set -g status-style "fg=#82aaff,bg=#1e2030"

set -g status-left-length "100"
set -g status-right-length "100"

set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#{?client_prefix,#[bg=green],#[bg=#82aaff]}#[fg=#1b1d2b,bold] #S #[fg=#82aaff,bg=#1e2030,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]#[fg=#82aaff,bg=#1e2030] #[fg=#82aaff,bg=#3b4261,nobold,nounderscore,noitalics]#{?client_prefix,#[bg=green],#[bg=#82aaff]}#[fg=#1b1d2b,bold]  #{b:pane_current_path} "

set -ogq @wf_icon_last "" # -
set -ogq @wf_icon_current "" # *
set -ogq @wf_icon_zoom " 󰛭" # Z
set -ogq @wf_icon_mark " 󰃀" # M
set -ogq @wf_icon_silent " 󰂛" # ~
set -ogq @wf_icon_activity " 󱅫" # #
set -ogq @wf_icon_bell " 󰂞" # !
# Matches icon order when using `#F` (`#!~[*-]MZ`)
set -ogq @wf_icon_format "##{?window_activity_flag,#{E:@wf_icon_activity},}##{?window_bell_flag,#{E:@wf_icon_bell},}##{?window_silence_flag,#{E:@wf_icon_silent},}##{?window_active,#{E:@wf_icon_current},}##{?window_last_flag,#{E:@wf_icon_last},}##{?window_marked_flag,#{E:@wf_icon_mark},}##{?window_zoomed_flag,#{E:@wf_icon_zoom},}"
set -gqF @wf_icons "#{E:@wf_icon_format} "

setw -g window-status-activity-style "underscore,fg=#828bb8,bg=#1e2030"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#828bb8,bg=#1e2030"
setw -g window-status-format "#[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]#[default] #I #W #[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#1e2030,bg=#3b4261,nobold,nounderscore,noitalics]#{?client_prefix,#[fg=green],#[fg=#82aaff]}#[bg=#3b4261,bold] #I #W#{E:@wf_icons}#[fg=#3b4261,bg=#1e2030,nobold,nounderscore,noitalics]"


# edit & reload configuration
bind e new-window -n "~/.tmux.conf" -e "EDITOR=$EDITOR" sh -c 'case "${EDITOR:-vim}" in *vim) ${EDITOR:-vim} -c ":set syntax=tmux" ~/.tmux.conf;; *) "$EDITOR" "~/.tmux.conf";; esac && tmux source ~/.tmux.conf \; display "~/.tmux.conf sourced"'

# reload configuration
bind r run 'tmux source ~/.tmux.conf' \; display "~/.tmux.conf sourced!"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
